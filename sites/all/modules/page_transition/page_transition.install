<?php/** * @file * Page Transition Install file. *//** * Implements hook_requirements(). */function page_transition_requirements($phase) {  $requirements = array();  if ($phase == 'runtime') {    $t = get_t();    $library = libraries_detect('animsition');    $error_message = isset($library['error message']) ? $library['error message'] : '';    if (empty($library['installed'])) {      $requirements['animsition'] = array(        'title' => $t('Animsition'),        'value' => $t('Not installed'),        'severity' => REQUIREMENT_ERROR,        'description' => $t('!error You need to download the !animsition, extract the archive and place the animsition directory in the %path directory on your server.', array(            '!error' => $error_message,            '!animsition' => l($t('Animsition'), $library['download url']),            '%path' => libraries_get_path('animsition'),          )        ),      );    }    else {      $requirements['animsition'] = array(        'title' => $t('Animsition'),        'severity' => REQUIREMENT_OK,        'value' => $t('Installed') . ' (' . $library['version'] . ')',      );    }  }  return $requirements;}/** * Implements hook_schema(). */function page_transition_schema() {  $schema['page_transition'] = array(    'description' => 'Save the transition details.',    'fields' => array(      'machine_name' => array(        'description' => 'The primary identifier for a transition.',        'type' => 'varchar',        'length'      => 255,        'not null'    => TRUE,        'default' => '',      ),      'name' => array(        'description' => 'The human-friendly name of transition.',        'type' => 'varchar',        'length'      => 255,        'not null'    => TRUE,        'default' => '',      ),      'status' => array(        'type' => 'int',        'not null' => TRUE,        'size' => 'tiny',        'default' => 1,      ),      'settings' => array(        'description' => 'A serialized array of the settings for this transition.',        'type' => 'blob',        'size' => 'big',        'not null' => FALSE,        'serialize'   => TRUE,      ),    ),    'primary key' => array('machine_name'),  );  return $schema;}/** * Implements hook_install(). */function page_transition_install() {  // Add Default Transition  $transition_values = array(    'transition_element' => '#page-wrapper',    'inClass' => 'flip-in-x',    'outClass' => 'flip-out-x',    'inDuration' => 1500,    'outDuration' => 800,    'linkElement' => 'a',    'loading' => 1,    'loadingParentElement' => 'body',    'loadingClass' => 'animsition-loading',    'loadingInner' => '',    'timeout' => 0,    'timeoutCountdown' => 5000,    'onLoadEvent' => 1,    'browser' => "[ 'animation-duration', '-webkit-animation-duration']",    'overlay' => 0,    'overlayClass' => 'overlay-slide-in-top',    'overlayParentElement' => 'body',  );  db_insert('page_transition')    ->fields(array(      'name' => 'Default',      'machine_name' => 'default',      'settings' => serialize($transition_values),    ))->execute();}